Script started on 2023-01-30 22:21:17-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="84" LINES="66"]
]0;zs35@gold18: ~/Desktop/214/labs/04/clojure[01;32mzs35@gold18[00m:[01;34m~/Desktop/214/labs/04/clojure[00m$ cat    d src
]0;zs35@gold18: ~/Desktop/214/labs/04/clojure/src[01;32mzs35@gold18[00m:[01;34m~/Desktop/214/labs/04/clojure/src[00m$ car    at logTav ble.clj
;;;; logTable.clj displays a table of logarithms.
;;;;
;;;; Input: start, stop and increment, three numbers.
;;;; Precondition: start < stop && increment > 0.
;;;; Output: A table of logarithms from start to stop,
;;;;          with interval of increment.
;;;;
;;;; Begun by: Prof. Adams, for CS 214 at Calvin College.
;;;; Completed by: ZeAi Sun
;;;; Date: Jan 30, 2023
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns logTable)                                 ; name the program

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; displayLogTable() recursively generates the log-table.
;;; Receive: start, the first value for the table;
;;;          stop, the last value for the table;
;;;          step, the step value for the table;
;;; Precondition: start < stop && increment > 0.
;;; Output: The table of logs from start to stop, by step.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; direct-recursive version
(defn displayLogTable [start, stop, step]
   (if (<= start stop) 
      (do (print "The logarithm of " start " is " (java.lang.Math/log10 start) "\n")
        (displayLogTable ( + start step) stop step)
        )
    )
)

;; loop (indirect-recursion) version
(defn displayLogTable2 [start stop step]
  (loop [i start]                           ; set i to start
    (when (<= i stop)                       ; if i <= stop:
      (printf "The logarithm of %f is %f\n" ;  print one line
                  i (Math/log10 i)
      )
      (recur (+ i step))                    ; recurse, i += step
    )
  )
)

;; indirect/tail-recursive version (just using recur)
(defn displayLogTable3 [start stop step]
  (if (<= start stop)                     ; if start <= stop:
    (do                                      ; do these two things:
      (printf "The logarithm of %f is %f\n"  ; - print one line
                  start (Math/log10 start)
      )
      (recur (+ start step) stop step)       ; - recurse, start+=step
    )
  )
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; -main is a 'driver' for the displayLogTable() functions.
;;; Input: start, stop and increment.
;;; Output: The table of logarithms 
;;;          from start to stop by increment
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defn -main []
 (println "To display a table of logarithms,")
 (print " enter the start, stop, and increment values: ") (flush)
 (let
    [ start (double (read))
      stop (double (read))
      increment (double (read))
    ] 
    (println)
    (displayLogTable start stop increment) 
    (println)
    (displayLogTable2 start stop increment) 
    (println)
    (displayLogTable3 start stop increment) 
    (println)
 )
)

]0;zs35@gold18: ~/Desktop/214/labs/04/clojure/src[01;32mzs35@gold18[00m:[01;34m~/Desktop/214/labs/04/clojure/src[00m$ cd ..
]0;zs35@gold18: ~/Desktop/214/labs/04/clojure[01;32mzs35@gold18[00m:[01;34m~/Desktop/214/labs/04/clojure[00m$ l clojure -m lotTable
Execution error (FileNotFoundException) at clojure.main/main (main.java:40).
Could not locate lotTable__init.class, lotTable.clj or lotTable.cljc on classpath.

Full report at:
/tmp/clojure-10902351617966633906.edn
]0;zs35@gold18: ~/Desktop/214/labs/04/clojure[01;32mzs35@gold18[00m:[01;34m~/Desktop/214/labs/04/clojure[00m$ clojure -m lotTable
Execution error (FileNotFoundException) at clojure.main/main (main.java:40).
Could not locate lotTable__init.class, lotTable.clj or lotTable.cljc on classpath.

Full report at:
/tmp/clojure-7015187447955922776.edn
]0;zs35@gold18: ~/Desktop/214/labs/04/clojure[01;32mzs35@gold18[00m:[01;34m~/Desktop/214/labs/04/clojure[00m$ clojure -m lotTable      gTable
To display a table of logarithms,
 enter the start, stop, and increment values: 1
10
0.5

The logarithm of  1.0  is  0.0 
The logarithm of  1.5  is  0.17609125905568124 
The logarithm of  2.0  is  0.3010299956639812 
The logarithm of  2.5  is  0.3979400086720376 
The logarithm of  3.0  is  0.47712125471966244 
The logarithm of  3.5  is  0.5440680443502757 
The logarithm of  4.0  is  0.6020599913279624 
The logarithm of  4.5  is  0.6532125137753437 
The logarithm of  5.0  is  0.6989700043360189 
The logarithm of  5.5  is  0.7403626894942439 
The logarithm of  6.0  is  0.7781512503836436 
The logarithm of  6.5  is  0.8129133566428556 
The logarithm of  7.0  is  0.8450980400142568 
The logarithm of  7.5  is  0.8750612633917001 
The logarithm of  8.0  is  0.9030899869919435 
The logarithm of  8.5  is  0.9294189257142927 
The logarithm of  9.0  is  0.9542425094393249 
The logarithm of  9.5  is  0.9777236052888477 
The logarithm of  10.0  is  1.0 

The logarithm of 1.000000 is 0.000000
The logarithm of 1.500000 is 0.176091
The logarithm of 2.000000 is 0.301030
The logarithm of 2.500000 is 0.397940
The logarithm of 3.000000 is 0.477121
The logarithm of 3.500000 is 0.544068
The logarithm of 4.000000 is 0.602060
The logarithm of 4.500000 is 0.653213
The logarithm of 5.000000 is 0.698970
The logarithm of 5.500000 is 0.740363
The logarithm of 6.000000 is 0.778151
The logarithm of 6.500000 is 0.812913
The logarithm of 7.000000 is 0.845098
The logarithm of 7.500000 is 0.875061
The logarithm of 8.000000 is 0.903090
The logarithm of 8.500000 is 0.929419
The logarithm of 9.000000 is 0.954243
The logarithm of 9.500000 is 0.977724
The logarithm of 10.000000 is 1.000000

The logarithm of 1.000000 is 0.000000
The logarithm of 1.500000 is 0.176091
The logarithm of 2.000000 is 0.301030
The logarithm of 2.500000 is 0.397940
The logarithm of 3.000000 is 0.477121
The logarithm of 3.500000 is 0.544068
The logarithm of 4.000000 is 0.602060
The logarithm of 4.500000 is 0.653213
The logarithm of 5.000000 is 0.698970
The logarithm of 5.500000 is 0.740363
The logarithm of 6.000000 is 0.778151
The logarithm of 6.500000 is 0.812913
The logarithm of 7.000000 is 0.845098
The logarithm of 7.500000 is 0.875061
The logarithm of 8.000000 is 0.903090
The logarithm of 8.500000 is 0.929419
The logarithm of 9.000000 is 0.954243
The logarithm of 9.500000 is 0.977724
The logarithm of 10.000000 is 1.000000

]0;zs35@gold18: ~/Desktop/214/labs/04/clojure[01;32mzs35@gold18[00m:[01;34m~/Desktop/214/labs/04/clojure[00m$ exit    exit
exit

Script done on 2023-01-30 22:22:15-05:00 [COMMAND_EXIT_CODE="0"]
